@model TH.WebSystem.Models.CourseOfMedicineViewModel

@{
    ViewBag.Title = "Course of Medicine details";
}

<h1>Course of Medicine details</h1>
<hr />

<table>
    <tr>
        <td>@Html.LabelFor(model => model.CourseOfMedicine.ScheduledDate)</td>
        <td>@Html.DisplayFor(model => model.CourseOfMedicine.ScheduledDate)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(model => model.CourseOfMedicine.Medicine.Name)</td>
        <td>@Html.DisplayFor(model => model.CourseOfMedicine.Medicine.Name)</td>
    </tr>
    <tr>
        <td>Recorded by</td>
        <td>@Html.DisplayFor(model => model.RecordedBy.FullName)</td>
    </tr>
    <tr>
        <td>Assigned to</td>
        <td>@Html.DisplayFor(model => model.AssignedTo.FullName)</td>
    </tr>
    <tr>
        <td>Administored by</td>
        <td>
            @if (Model.AdministeredBy != null)
                {@Html.DisplayFor(model => model.AdministeredBy.FullName)}
            else if (Model.CourseOfMedicine.Refusal != null)
                {@Html.Raw("Treatment refused")}
            else
                {@Html.Raw("Not yet administered")}
        </td>
    </tr>
</table>

@if (!Model.CourseOfMedicine.Visit.ReleaseDate.HasValue && Model.AdministeredBy == null && Model.CourseOfMedicine.Refusal == null)
{
    using (Html.BeginForm("AdministorCourseOfMedicine", "Treatment", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.TreatmentId)

        @Html.Raw("Administered by")
        @Html.DropDownListFor(model => model.AdministeredByUserId, new SelectList(Model.MedicalStaff, "UserId", "FullName", null))
        <input type="submit" value="Administor treatment" class="button">
    }

    <button>@Html.ActionLink("Record refusal of treatment", "RefuseTreatment", "Treatment", new { id = Model.TreatmentId}, null)</button>
}